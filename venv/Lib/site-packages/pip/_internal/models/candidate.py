<<<<<<< HEAD
<<<<<<< HEAD
from dataclasses import dataclass

from pip._vendor.packaging.version import Version
from pip._vendor.packaging.version import parse as parse_version

from pip._internal.models.link import Link


@dataclass(frozen=True)
class InstallationCandidate:
=======
=======
from dataclasses import dataclass

from pip._vendor.packaging.version import Version
>>>>>>> 903c694 (inital commit)
from pip._vendor.packaging.version import parse as parse_version

from pip._internal.models.link import Link


<<<<<<< HEAD
class InstallationCandidate(KeyBasedCompareMixin):
>>>>>>> ecbd90b (Initial commit)
=======
@dataclass(frozen=True)
class InstallationCandidate:
>>>>>>> 903c694 (inital commit)
    """Represents a potential "candidate" for installation."""

    __slots__ = ["name", "version", "link"]

<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> 903c694 (inital commit)
    name: str
    version: Version
    link: Link

<<<<<<< HEAD
    def __init__(self, name: str, version: str, link: Link) -> None:
        object.__setattr__(self, "name", name)
        object.__setattr__(self, "version", parse_version(version))
        object.__setattr__(self, "link", link)
=======
    def __init__(self, name: str, version: str, link: Link) -> None:
        self.name = name
        self.version = parse_version(version)
        self.link = link

        super().__init__(
            key=(self.name, self.version, self.link),
            defining_class=InstallationCandidate,
        )

    def __repr__(self) -> str:
        return "<InstallationCandidate({!r}, {!r}, {!r})>".format(
            self.name,
            self.version,
            self.link,
        )
>>>>>>> ecbd90b (Initial commit)
=======
    def __init__(self, name: str, version: str, link: Link) -> None:
        object.__setattr__(self, "name", name)
        object.__setattr__(self, "version", parse_version(version))
        object.__setattr__(self, "link", link)
>>>>>>> 903c694 (inital commit)

    def __str__(self) -> str:
        return f"{self.name!r} candidate (version {self.version} at {self.link})"
